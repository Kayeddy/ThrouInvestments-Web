{
  "version": 3,
  "sources": ["../../bind-decorator/index.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/create-context.js", "../../preact/src/constants.js", "../../preact/src/diff/children.js", "../../preact/src/diff/props.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants;\n(function (constants) {\n    constants.typeOfFunction = 'function';\n    constants.boolTrue = true;\n})(constants || (constants = {}));\nfunction bind(target, propertyKey, descriptor) {\n    if (!descriptor || (typeof descriptor.value !== constants.typeOfFunction)) {\n        throw new TypeError(\"Only methods can be decorated with @bind. <\" + propertyKey + \"> is not a method!\");\n    }\n    return {\n        configurable: constants.boolTrue,\n        get: function () {\n            var bound = descriptor.value.bind(this);\n            // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.\n            Object.defineProperty(this, propertyKey, {\n                value: bound,\n                configurable: constants.boolTrue,\n                writable: constants.boolTrue\n            });\n            return bound;\n        }\n    };\n}\nexports.bind = bind;\nexports.default = bind;\n", "import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": ["constants", "assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnodeId", "options", "createRef", "current", "Fragment", "Component", "context", "this", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "setTimeout", "queue", "__r", "sort", "a", "b", "some", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "__P", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "Array", "isArray", "EMPTY_OBJ", "reorderChildren", "placeChild", "unmount", "applyRef", "tmp", "toChildArray", "out", "nextDom", "sibDom", "outer", "appendChild", "nextSibling", "insertBefore", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "prevScu", "shouldComponentUpdate", "p", "s", "c", "stateHooks", "filter", "x", "every", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "invokeCleanup", "invokeEffect", "e", "__e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "diffed", "unmount", "__b", "vnode", "commitQueue", "hasErrored"]
}
